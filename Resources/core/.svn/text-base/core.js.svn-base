window.app = {};

window.app.domain = 'http://' + document.domain;

function uploadPhotoPrompt(){
    if(window.woopraTracker) window.woopraTracker.pushEvent({name:'photo_upload_clicked'});
    if(window.newCollectionModal) window.newCollectionModal.dispose();
    window.newCollectionModal = new Protolus.Window('photo_prompt', {
        title : 'Add a Photo',
        dragHandle : '*.top_bar',
        panel: 'photo_prompt',
        offset : {
            x : 0,
            y : 50
        },
        data: false,
        standardControls : 'close',
        position : ['top', 'center'],
        onLoad:function(){
            if(!window.networkObj){
				window.networkObj = new Network({});
				window.networkObj.require('facebook');
			}
			if(document.id('no_photos_modal')){ document.id('no_photos_modal').dispose(); }
        },
        onConfirm:function(data, callback){
            document.id('post_form').submit();
            callback();
        }
    });
    window.newCollectionModal.actions([
        {
            name : 'upload',
            target: '#upload_btn',
            label : 'Upload Photo',
            type : 'file',
            width : '150px',
            height : '37px',
            endpoint : '/data/core/upload_button',
            'background' : 'FFFFFF',
            'class' : 'callout_button',
            action : function(modal){
                    
                    var data = modal.fields();
                    //modal.modalContentText.innerHTML = '';
                    //when the iframe returns the JSON from the form submission, we want to react to it
                    var localModal = modal;
                    var frame = document.id('photo_prompt_upload_upload_frame');
                    frame.spin();
                    document.id('photo_prompt_upload_upload_frame').iFrameContainsJSON(function(data){
                        var rand = Math.floor(Math.random() * 1000);
                        frame.src = frame.src + '?'+rand;
                        document.id('photo_prompt_upload_upload_frame').hide(); //hide this control, now that it's filled with a JSON payload
                        if(data.result == 'success'){
                            uploadPhotoEdit(data);
                        }else{
                        
                        }
                        frame.unspin();
                    });
                    
            }
        }
    ]);
    window.newCollectionModal.show();
};

function uploadPhotoEdit(data){
    window.newCollectionModal.options.contentFrame = '*.frame';
    window.newCollectionModal.actions([
        {
            name : 'save',
            label : 'Save',
            'class' : 'callout_button',
            target : '#post_modal_buttons',
            action : function(modal){
                if(collectionsDataValid()){
                    new Request.JSON({
                        'url': '/data/core/post_save', 
                        'onComplete': function(data) { //onSuccess?
                            if(data.status == 'success'){
                                passiveNotification('Image uploaded!');
                                if(window.woopraTracker) window.woopraTracker.pushEvent({name:'image_uploaded'});
                                Protolus.currentPanel(function(panel){
                                    if(panel.toLowerCase() == 'collections') window.location.reload();
                                });
                                
                            }else{
                                passiveNotification('There was a problem uploading your image.');
                            }
                            window.newCollectionModal.hide();
                        }
                    }).post(window.newCollectionModal.fields());
                     window.newCollectionModal.modal.innerHTML = '<div style="width:100%;text-align:center;">Uploading<br/><img src="/images/loading.gif"/></div>';
                }else{
                    document.id('post_collection_error').show();
                }
                
            }
        }
    ]);
    //window.newCollectionModal.set('<img style="max-height:400px;" src="/post/image?'+Math.floor(Math.random()*10000)+'"/>');
    //if(!data) data = {};
    //data.user = window.user;
    window.newCollectionModal.options.onLoad = function(){
       window.newCollectionModal.modal.setStyle('minHeight', '400px');
    }
    window.newCollectionModal.render('core/image_edit', undefined, function(){
        //window.newCollectionModal.buildActions();
        //new TaggableText.Counter('caption_input', { container : 'text_counter', max : 140 });
    });
    window.newCollectionModal.modal.setStyle('width', 800);
    //document.id('modal_box').setStyle('min-height', 410);
    //document.id('modal_box_content').setStyle('height', 530);
}
//edit profile modal
var current_type = '';
function setHomepageURL(homepage_url){
   // var homepage_url = document.id('homepage_url');
 	var value = homepage_url.get('value');
	
	var req = new Request.JSON({
        url : '/user/save/homepage_url',
        onSuccess : function(data){
            
			var notimooManager = new Notimoo({
            });
            notimooManager.show({
                message: 'URL UPDATED'
            });
            if(window.woopraTracker) window.woopraTracker.pushEvent({name:'blog_url_updated'});
        }.bind(this)
    }).post({'value':value});
 window.siteUrlUpdate = false;
}
function editProfile(type){
   if(!document.profileEditor) document.profileEditor = new Protolus.TabbedWindow('edit_profile', {
        wrapper : 'editProfile',
        tab : 'background',
        dragHandle : '*.top_bar',
        offset : {
            x : 0,
            y : 50
        },
        standardControls : 'close',
        position : ['top', 'center'],
        contentFrame : '*.frame',
        tabContainer : '*.window_tabs',
        tabClass : 'menu_button',
        onClose : function(){if(window.siteUrlUpdate == true){setHomepageURL(document.id('homepage_url'));} if(window.altered == true) collectionSave(); displayNoPhotosModal();},
        onTab : function(){ if(window.siteUrlUpdate == true){setHomepageURL(document.id('homepage_url'));} if(window.altered == true) collectionSave(); },
        onLoad : function(){           
            if(document.id('background_history')){
                
                 var backgrounds = window.user.profile.background_url_history;
                 var pos =  backgrounds.length - 5;
                 var defaultbackground = backgrounds.splice(pos,5);
                // var defaultBackground = backgrounds.splice(pos);

                 window.backgroundUploadSlideshow = new Slideshow({ 'liClasses' : 'background_tile history_preview', 'container' : 'background_container', 'images' : backgrounds, 'imageKey' : 'small', 'fullSizeKey' : 'large', 'slideshowViewSize' : '480', 'imagesPerView' : 3, 'liActions' : {'click' : "$$('.history_preview').removeClass('selected'); this.addClass('selected');", 'mouseover' : "if(this.getChildren('div').length > 0) this.getChildren('div')[0].show();", 'mouseout' : "if(this.getChildren('div').length > 0) this.getChildren('div')[0].hide();"}, 'imgActions' : {'click' :"document.changeBackground(this.getAttribute('full_size'), true);", 'load' : "createBackgroundRemovalButton(this)"}});
                 window.backgroundDefaultslideshow = new Slideshow({'liClasses' : 'background_tile history_preview', 'container' : 'default_background_container', 'images' : defaultbackground, 'imageKey' : 'small', 'fullSizeKey' : 'large','slideshowViewSize' : '480', 'imagesPerView' : 3, 'liActions' : {'click' : "$$('.history_preview').removeClass('selected'); this.addClass('selected');"}, 'imgActions' : {'click' :"document.changeBackground(this.getAttribute('full_size'), true);"}});
                                    
            }
        },        
        tabs : [
            {
                name : 'background',
                label : 'Background',
                panel : 'modals/editProfile_background',
                selected : function(){},
                controls : [
                    {
                        name : 'save_upload',
                        label : 'Upload Background Image',
                        type : 'file',
                        width : '250px',
                        height : '50px',
                        endpoint : '/data/core/upload_bg_button',
                        src : '/core/upload_bg_button',
                        target: '#background_upload_target',
                        'background' : 'FFFFFF', 
                        action : function(){
                            var frame = document.id('edit_profile_save_upload_upload_frame');
                            frame.spin();
                            frame.iFrameContainsJSON(function(data){
                                var rand = Math.floor(Math.random() * 1000);
                                frame.src = frame.src + '?'+rand;
                                var bg = document.id('background');
                                var history = document.id('background_history');
                                window.backgroundUploadSlideshow.addToSlideShow(data.res.profile.background_url.large);
                                document.changeBackground(data.res.profile.background_url.large);
                                frame.unspin();
                                if(window.woopraTracker) window.woopraTracker.pushEvent({name:'background_uploaded'});
                            });
                        }
                    }
                ]
            },
            {
                name : 'biography',
                label : 'Biography',
                panel : 'modals/editProfile_biography',
                initialize : function(){ 
                    
                    var countObj = new Counter('bio', {'textCounterElem':'text_counter'});
                    var formValidator = new FormValidator({
                        'watch_fields':['username'],
                        'fieldCallbacks' : {
                            'username':function(val){ 
                                if(val == 'ok') updateUser('username', document.id('username').get('value'));
                            }
                        }
                    });
                    document.id('username').addEvent('keyup', function(event){
                        document.id('username_span').set('text', document.id('username').get('value'));
                    });   
                    
                },
                selected : function(){},
                controls : [
                    {
                         name : 'save_upload',
                         label : 'Edit Picture',
                         type : 'file',
                         width : '170px',
                         height : '50px',
                         endpoint : '/data/core/bio_save_upload_button',
                         src : '/core/bio_save_upload_button',
                         target: '#upload_picture_action_target',
                         'background' : 'FFFFFF', 
                         action : function(modal){
                             document.id('edit_profile_save_upload_upload_frame').hide();
                             document.id('edit_profile_save_upload_upload_frame').iFrameContainsJSON(function(data){
                                    if(data.result == 'success'){
                                        document.id('edit_profile_save_upload_upload_frame').src = '/core/bio_save_upload_button?name=save_upload&label=Edit Picture&callback=undefined_save_upload&width=170px&height=50px&background=FFFFFF&style=vertical-align:bottom;&url=/data/core/bio_save_upload_button';                                
                                        document.id('upload_picture').src = data.image;
        
                                        window.lookingAt.profile.pictures.large = data.image;
        
                                        new Request.JSON({
                                            'url': '/data/core/bio_save_upload_button', 
                                            'onComplete': function(data) { //onSuccess?
                                                if(data.result == 'success'){
                                                    passiveNotification('Profile pic changed'.toUpperCase());
                                                    if(window.woopraTracker) window.woopraTracker.pushEvent({name:'bio_updated'});	    
                                                }
                                                
                                                document.id('edit_profile_save_upload_upload_frame').show();
                                            }
                                        }).post(modal.fields());
                                                                        
                                    }
                             });
                                        
                         }                        
                     }
                ]
            },
            {
                name : 'collections',
                label : 'Collections',
                panel : 'modals/editProfile_collections',
                initialize : function(){
                    initListEditor();
                }
            },
            {
                name : 'header',
                label : 'Header',
                panel : 'modals/editProfile_header',
                initialize : function(){
                     window.slideshow = new Slideshow({'liClasses' : 'background_tile history_preview', 'container' : 'header_container', 'images' : window.user.profile.header_url_history, 'imageKey' : 'original', 'fullSizeKey' : 'original', 'slideshowViewSize' : '480', 'liActions' : {'click' : "$$('.history_preview').removeClass('selected'); this.addClass('selected');", 'mouseover' : "if(this.getChildren('div').length > 0) this.getChildren('div')[0].show();", 'mouseout' : "if(this.getChildren('div').length > 0) this.getChildren('div')[0].hide();"}, 'imgActions' : {'click' :'document.changeHeader(this.getAttribute("full_size"), true);'},  'load' : "createBackgroundRemovalButton(this)"});
                },
                selected : function(){},
                controls : [
                    {
                        name : 'save_upload',
                        label : 'Upload',
                        type : 'file',
                        width : '100px',
                        height : '40px',
                        endpoint : '/data/core/upload_header_button',
                        src : '/core/upload_header_button',
                        target: '#header_upload_target',
                        'background' : 'FFFFFF', 
                        action : function(){
                            var frame = document.id('edit_profile_save_upload_upload_frame');
                            frame.spin();
                            frame.iFrameContainsJSON(function(data){
                                var rand = Math.floor(Math.random() * 1000);
                                frame.src = frame.src + '?'+rand;    
                                document.changeHeader(data.res.profile.header_url.large,'true'); 
                                window.slideshow.addToSlideShow(data.res.profile.header_url.large);                           
                                frame.unspin();
                                if(window.woopraTracker) window.woopraTracker.pushEvent({name:'header_uploaded'});
                            });                             
                        }                        
                    }
                ]
            },
            {
                name : 'services',
                label : 'Services',
                panel : 'modals/editProfile_services',
                initialize : function(){
                    if(!window.networkObj){
						window.networkObj = new Network({});
						window.networkObj.require('facebook');
					}
					
					var homepage_url = document.id('homepage_url');
					if(homepage_url){
						homepage_url.linkText('user_url', 'text');
						
						homepage_url.addEvent('keydown', function(event){
						    if(!window.siteUrlUpdate || window.siteUrlUpdate == false) window.siteUrlUpdate = true;
                            if(event.code == 13){ //enter
                                setHomepageURL(document.id('homepage_url'));
                            }
						});
						homepage_url.addEvent('blur', function(event){
                            if(!window.siteUrlUpdate || window.siteUrlUpdate == false) window.siteUrlUpdate = true;
                            setHomepageURL(document.id('homepage_url'));
						});
					}
                    
                    
                },
                selected : function(){},
                controls : []
            }
        ]
    });
    document.profileEditor.show();
   
}
var usernameChanged = false;
function updateUser(type, value){
    var submission = new Request.JSON({
        url: '/user/save/profile',
        onSuccess: function(result) {
            var notimooManager = new Notimoo({
            });
            notimooManager.show({
                message: 'PROFILE UPDATED'
            });
            if(type == "username"){
                usernameChanged = true;
            }
            if(window.user && result.user){
                 window.user = result.user;
                 
                 if(window.lookingAt){
                     if(window.lookingAt.user_id == window.user.user_id){
                         window.lookingAt = window.user;
                     }
                }
            }
        }.bind(this)
     }).post({'key':type, 'value':value});
}
var photoModalOpen = false;
function displayNoPhotosModal(){
    if(!photoModalOpen){
        photoModalOpen = true;
        
        if(window.user.post_count == 0){
            var submission = new Request.JSON({
               url: '/user/get/bookmarklet_tutorial',
               onSuccess: function(event) {
                   if(event.bookmarklet_tutorial_dismissed == false){
                       if(window.tutorialModal)window.tutorialModal.dispose();
                       window.tutorialModal = new Protolus.Window('bookmarkletTutorial', {
                           dragHandle : '*.top_bar',
                             offset : {
                                 x : 0,
                                 y : 50
                             },
                             standardControls : 'close',
                             position : ['top', 'center'],
                             'name': 'bookmarkletTutorial',
                              contentFrame : '*.frame',
                            title : 'Add Images',
                            onConfirm:function(data, callback){
                                //console.log('beavis');
                    
                            },
                            onHide:function(data, callback){
                                window.tutorialModal.dispose();
                            },
                            onClose:function(){
                                var submission = new Request.JSON({
                                    url: '/user/save/bookmarklet_tutorial',
                                    onSuccess: function(event) {
                                    }
                                }).post();
                                window.tutorialModal.dispose();
                            },
                            panel: 'bookmarkletTutorial'
                       });
                   
                       window.tutorialModal.actions([{
                           name : 'watch',
                           label : 'Watch Tutorial',
                           'class' : 'callout_button',
                           'target':'#watch_btn',
                           action : function(f){
                              var textdiv = document.id('bookmarkletTutorialText');
                              if(textdiv){
                                  textdiv.hide();
                      
                                  var viddiv = document.id('bookmarkletTutorialVideo');
                                  viddiv.show();
                                  if(document.id('watch_btn')){
                                      document.id('watch_btn').hide();
                                   }
                              }
                           }
                       }]);
                      window.tutorialModal.show(); 
                    }
           }
           }).post();
       }
   }
}

function reorderListItems(){
    document.id('collections_list').getChildren().each(function(collection_li, index){
        collection_li.collectionPosition = index;
    });
}

function editCollection(collectionElement){ //we are starting to edit a text field in the pop-up
    var pos = collectionElement.id.split('_').pop();
    var dragID = 'collection_dragger_'+pos;
    var el = new Element('input', {
        id : 'collection_edit_input',
        type : 'text', 
        events:{
            blur : function(){
                var edit_control = this.getParent().getParent().getElementsByTagName('a')[0];
                edit_control.innerHTML = 'edit';
                edit_control.onclick = edit_control.oldclick;
                this.getParent().innerHTML = this.value;
                window.altered = true;
            }
        },
        value : collectionElement.innerHTML
    });
    el.linkText(document.id(dragID).getElementsByTagName('span')[0]);
    
    collectionElement.empty().adopt(el);
}

function cancelCollectionEdit(){
    if(window.altered){
        var elements = {};
        $$('.collection_dragger').each(function(element, pos){
            elements[element.collectionOriginalPosition] = element;
        });
        Object.each(elements, function(element, position){
            var p = document.id('collection_'+position);
            if(p) p.removeElements(elements).adopt(element);
        });
        window.altered = false;
    }
}

function backgroundStyleSelection(element){
    if(window.background_arrangment != element.value){
        
        var bg_old = document.id('background');
        if(element.value == 'tiled'){
            
            var div_bg = new Element('div', {'id' : 'background', styles : {'background-image' : "url('"+bg_old.src +"')", 'background-repeat' : 'repeat', 'background-size': 'auto auto'}});
            div_bg.inject(bg_old,'after');
            bg_old.dispose();
            div_bg.enlargeToFit(window);
        }
        else if(element.value == 'stretched'){
            var imgsrc = bg_old.getStyle('background-image');
            var regExp = /^url\("?(.*?)"?\)$/ig; 
            var matches = regExp.exec(imgsrc);
            img_src = matches[1];
            bg_old.setStyle('opacity' , 0);  
            var div_bg = new Element('img', {'id' : 'background', 'src' : img_src});
            div_bg.enlargeToFit(window, function(){
              //  alert('asdad');
                div_bg.inject(bg_old,'after');
                bg_old.dispose();    
            }); 
           

               
        }
        window.background_arrangment = element.value;
        new Request.JSON({
            'url': '/user/update_background_arrangement', 
            'onComplete': function(data) { //onSuccess?

            }
        }).post({'background_arrangement' : element.value});
        
    }
}

function createBackgroundRemovalButton(img){
    if(!img.buttonCreated){
        var newDelButton = new Element('div',{
            'class' : 'close_button',
            'text' : 'X'
        });
        newDelButton.addEvent('click', function(){
            removeSavedBackground(img.getAttribute('full_size'),this);
        });
        newDelButton.inject(img,'before');
        img.buttonCreated = true;
    }
}

function removeSavedBackground(bg,elem){
    var bgTile = elem.getParent();
    //console.log(bg);
    new Request.JSON({
        'url': '/user/remove_saved_background', 
        'onComplete': function(data) { //onSuccess?
            //console.log(data);
            passiveNotification('Background Removed'.toUpperCase());
            if(bgTile.hasClass('background_tile')){
                bgTile.set('tween', {
                    duration: 500
                }).fade('out').get('tween').chain(function() {
                    bgTile.dispose();
                });
            }
        }
        
    }).post({'background_key' : bg});
}

function removeSavedHeader(header,elem){
    var hdTile = elem.getParent();
    new Request.JSON({
        'url': '/user/remove_saved_header',
        'onComplete': function(data) { //onSuccess?
            passiveNotification('Header Removed'.toUpperCase());
            if(hdTile.hasClass('background_tile')){
                hdTile.set('tween', {
                    duration: 500
                }).fade('out').get('tween').chain(function() {
                    hdTile.dispose();
                });
            }
        }
        
    }).post({'header_key' : header});
}

function restoreDefaultHeader(){
    new Request.JSON({
        'url': '/user/setHeaderUrl', 
        'onComplete': function(json) { //onSuccess?
            if(json.status == 'success'){
                var customHeader = document.id('custom_header');
                if(customHeader){
                    var panel = new Protolus.Panel('userTopProfile');
                    var data = {};
                    if(!data.user) data.user= {};
                    if(!data.user.profile) data.user.profile = {};
                    data.user.profile.username = window.user.profile.username;
                    var defaultHeader = new Element('div', {'id' : 'default_header', 'class' : 'main_canvas bg'});
                    var userTopBar = new Element('div', {'id' : 'user_top_bar'});
                    panel.render(data, function(html){
                        
                        userTopBar.adopt(html.toDOM());
                         defaultHeader.adopt(userTopBar);
                         defaultHeader.inject(customHeader,'before');
                         customHeader.dispose();
                    }.bind(this));
                }
                
            }
        }
    }).post({'default' : 'true'}); 
}

function initListEditor(){
    'collections_list'.whenInDOM(function(container){
        var lastSort = false;
        var currentPosition = null;
        window.sortables = new Sortables(document.id('collections_list'), {
            clone:true,
            onStart : function(element, clone, target){
                element.addClass('selected');
                clone.addClass('floating');
                currentPosition = null;
            },
            onSort : function(element, clone, target){
                lastSort = {start:element.collectionPosition, stop:target.collectionPosition};
                if(element.collectionPosition == target.collectionPosition) delete lastSort;
            },
            onComplete : function(element, clone, target){
                element.removeClass('selected');
                if(clone) clone.removeClass('floating');
                if(lastSort && Array.from(container.getElementsByTagName('li')).indexOf(element) != element.collectionPosition){
                    collectionSwap(lastSort.start, lastSort.stop);
                    reorderListItems();
                }
            }
        });
        reorderListItems();
    });
}

function followUser(user_id){
    var furObj = new Furgraph();
    furObj.follow(user_id, "follow_" + user_id);
}